plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
    id 'kotlin-parcelize'
    id 'com.google.android.libraries.mapsplatform.secrets-gradle-plugin'
    id 'com.dicedmelon.gradle.jacoco-android'
}

android {
    compileSdk 33

    defaultConfig {
        applicationId "com.rumosoft.marvelcompose"
        minSdk 21
        targetSdk 33
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }
    kotlinOptions {
        jvmTarget = '11'
        freeCompilerArgs = ['-Xjvm-default=enable']
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion "$compose_version"
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
            excludes += "META-INF/LICENSE*"
        }
    }
    testOptions {
        unitTests.returnDefaultValues = true
        unitTests.all {
            useJUnitPlatform()
        }
    }
    namespace 'com.rumosoft.marvelcompose'
}

dependencies {
    def composeBom = platform("androidx.compose:compose-bom:$compose_bom_version")
    implementation project(path: ':feature-characters')
    implementation project(path: ':feature-comics')
    implementation project(path: ':library-components')
    implementation project(path: ':library-commons')
    implementation composeBom

    implementation 'androidx.core:core-ktx:1.9.0'
    implementation 'androidx.appcompat:appcompat:1.5.1'
    implementation "androidx.compose.ui:ui"
    implementation "androidx.compose.material3:material3"
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.5.1'
    implementation 'androidx.activity:activity-compose:1.6.1'

    implementation "androidx.navigation:navigation-compose:$nav_compose"
    implementation 'androidx.navigation:navigation-runtime-ktx:2.5.3'

    implementation 'com.jakewharton.timber:timber:5.0.1'

    kapt "com.google.dagger:hilt-android-compiler:$hilt_version"
    implementation "com.google.dagger:hilt-android:$hilt_version"
    implementation "androidx.hilt:hilt-navigation:1.0.0"
    implementation "androidx.hilt:hilt-navigation-compose:1.0.0"
    kapt "com.google.dagger:hilt-compiler:$hilt_version"

    implementation("com.squareup.okhttp3:okhttp:4.10.0")

    implementation 'androidx.core:core-splashscreen:1.0.0'

    testImplementation("org.junit.jupiter:junit-jupiter:$junit5_version")
    testRuntimeOnly("org.junit.vintage:junit-vintage-engine:$junit5_version")
    testImplementation("androidx.arch.core:core-testing:2.1.0")
    testImplementation("io.mockk:mockk:$mockk_version")
    testImplementation("org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutine_version")

    androidTestImplementation composeBom
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation "androidx.test.espresso:espresso-core:$espresso_version"
    androidTestImplementation "androidx.compose.ui:ui-test-junit4"
    debugImplementation("androidx.compose.ui:ui-test-manifest")
    androidTestImplementation("io.mockk:mockk-android:$mockk_version")
}

jacoco {
    toolVersion = "0.8.4"
}

tasks.withType(Test) {
    jacoco.includeNoLocationClasses = true
}
